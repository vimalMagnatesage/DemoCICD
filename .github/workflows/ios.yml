name: iOS starter workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-14
    env:
      DEVELOPER_DIR: /Applications/Xcode_16.4.app/Contents/Developer

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json || true)
          if [ -z "$scheme_list" ]; then
            echo "❌ Could not parse project. Is it using an unsupported project format?"
            exit 1
          fi
          default=$(echo "$scheme_list" | ruby -e "require 'json'; puts JSON.parse(STDIN.read)['project']['schemes'][0]")
          echo "$default" > default
          echo "✅ Using default scheme: $default"

      - name: Build
        run: |
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          scheme=$(cat default)
          if ls -A | grep -iq \\.xcworkspace$; then
            filetype_parameter="workspace"
            file_to_build=$(ls -A | grep -i \\.xcworkspace$)
          else
            filetype_parameter="project"
            file_to_build=$(ls -A | grep -i \\.xcodeproj$)
          fi
          file_to_build=$(echo "$file_to_build" | awk '{$1=$1;print}')
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=iOS Simulator,name=$device"

      - name: Test
        run: |
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          scheme=$(cat default)
          if ls -A | grep -iq \\.xcworkspace$; then
            filetype_parameter="workspace"
            file_to_build=$(ls -A | grep -i \\.xcworkspace$)
          else
            filetype_parameter="project"
            file_to_build=$(ls -A | grep -i \\.xcodeproj$)
          fi
          file_to_build=$(echo "$file_to_build" | awk '{$1=$1;print}')
          xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=iOS Simulator,name=$device"
